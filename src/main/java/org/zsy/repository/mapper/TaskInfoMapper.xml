<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zsy.repository.mapper.TaskInfoMapper">
  <resultMap id="BaseResultMap" type="org.zsy.repository.model.TaskInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="task_type" jdbcType="CHAR" property="taskType" />
    <result column="objs" jdbcType="VARCHAR" property="objs" />
    <result column="objs_frequency" jdbcType="VARCHAR" property="objsFrequency" />
    <result column="apps" jdbcType="VARCHAR" property="apps" />
    <result column="apps_frequency" jdbcType="VARCHAR" property="appsFrequency" />
    <result column="data_type" jdbcType="VARCHAR" property="dataType" />
    <result column="data_path" jdbcType="VARCHAR" property="dataPath" />
    <result column="data_length" jdbcType="INTEGER" property="dataLength" />
    <result column="sample_start_time" jdbcType="DATE" property="sampleStartTime" />
    <result column="sample_end_time" jdbcType="DATE" property="sampleEndTime" />
    <result column="upper_limit" jdbcType="INTEGER" property="upperLimit" />
    <result column="data_source" jdbcType="CHAR" property="dataSource" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="matching" jdbcType="DECIMAL" property="matching" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy" />
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, task_type, objs, objs_frequency, apps, apps_frequency, data_type, data_path, 
    data_length, sample_start_time, sample_end_time, upper_limit, data_source, status, 
    matching, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, del_flag
  </sql>
  <select id="selectByExample" parameterType="org.zsy.repository.model.TaskInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.zsy.repository.model.TaskInfoExample">
    delete from task_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zsy.repository.model.TaskInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_info (name, task_type, objs, 
      objs_frequency, apps, apps_frequency, 
      data_type, data_path, data_length, 
      sample_start_time, sample_end_time, upper_limit, 
      data_source, status, matching, 
      CREATED_BY, CREATED_TIME, UPDATED_BY, 
      UPDATED_TIME, del_flag)
    values (#{name,jdbcType=VARCHAR}, #{taskType,jdbcType=CHAR}, #{objs,jdbcType=VARCHAR}, 
      #{objsFrequency,jdbcType=VARCHAR}, #{apps,jdbcType=VARCHAR}, #{appsFrequency,jdbcType=VARCHAR}, 
      #{dataType,jdbcType=VARCHAR}, #{dataPath,jdbcType=VARCHAR}, #{dataLength,jdbcType=INTEGER}, 
      #{sampleStartTime,jdbcType=DATE}, #{sampleEndTime,jdbcType=DATE}, #{upperLimit,jdbcType=INTEGER}, 
      #{dataSource,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{matching,jdbcType=DECIMAL}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.zsy.repository.model.TaskInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="objs != null">
        objs,
      </if>
      <if test="objsFrequency != null">
        objs_frequency,
      </if>
      <if test="apps != null">
        apps,
      </if>
      <if test="appsFrequency != null">
        apps_frequency,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="dataPath != null">
        data_path,
      </if>
      <if test="dataLength != null">
        data_length,
      </if>
      <if test="sampleStartTime != null">
        sample_start_time,
      </if>
      <if test="sampleEndTime != null">
        sample_end_time,
      </if>
      <if test="upperLimit != null">
        upper_limit,
      </if>
      <if test="dataSource != null">
        data_source,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="matching != null">
        matching,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=CHAR},
      </if>
      <if test="objs != null">
        #{objs,jdbcType=VARCHAR},
      </if>
      <if test="objsFrequency != null">
        #{objsFrequency,jdbcType=VARCHAR},
      </if>
      <if test="apps != null">
        #{apps,jdbcType=VARCHAR},
      </if>
      <if test="appsFrequency != null">
        #{appsFrequency,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="dataPath != null">
        #{dataPath,jdbcType=VARCHAR},
      </if>
      <if test="dataLength != null">
        #{dataLength,jdbcType=INTEGER},
      </if>
      <if test="sampleStartTime != null">
        #{sampleStartTime,jdbcType=DATE},
      </if>
      <if test="sampleEndTime != null">
        #{sampleEndTime,jdbcType=DATE},
      </if>
      <if test="upperLimit != null">
        #{upperLimit,jdbcType=INTEGER},
      </if>
      <if test="dataSource != null">
        #{dataSource,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="matching != null">
        #{matching,jdbcType=DECIMAL},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zsy.repository.model.TaskInfoExample" resultType="java.lang.Long">
    select count(*) from task_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=CHAR},
      </if>
      <if test="record.objs != null">
        objs = #{record.objs,jdbcType=VARCHAR},
      </if>
      <if test="record.objsFrequency != null">
        objs_frequency = #{record.objsFrequency,jdbcType=VARCHAR},
      </if>
      <if test="record.apps != null">
        apps = #{record.apps,jdbcType=VARCHAR},
      </if>
      <if test="record.appsFrequency != null">
        apps_frequency = #{record.appsFrequency,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=VARCHAR},
      </if>
      <if test="record.dataPath != null">
        data_path = #{record.dataPath,jdbcType=VARCHAR},
      </if>
      <if test="record.dataLength != null">
        data_length = #{record.dataLength,jdbcType=INTEGER},
      </if>
      <if test="record.sampleStartTime != null">
        sample_start_time = #{record.sampleStartTime,jdbcType=DATE},
      </if>
      <if test="record.sampleEndTime != null">
        sample_end_time = #{record.sampleEndTime,jdbcType=DATE},
      </if>
      <if test="record.upperLimit != null">
        upper_limit = #{record.upperLimit,jdbcType=INTEGER},
      </if>
      <if test="record.dataSource != null">
        data_source = #{record.dataSource,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.matching != null">
        matching = #{record.matching,jdbcType=DECIMAL},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null">
        UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      task_type = #{record.taskType,jdbcType=CHAR},
      objs = #{record.objs,jdbcType=VARCHAR},
      objs_frequency = #{record.objsFrequency,jdbcType=VARCHAR},
      apps = #{record.apps,jdbcType=VARCHAR},
      apps_frequency = #{record.appsFrequency,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=VARCHAR},
      data_path = #{record.dataPath,jdbcType=VARCHAR},
      data_length = #{record.dataLength,jdbcType=INTEGER},
      sample_start_time = #{record.sampleStartTime,jdbcType=DATE},
      sample_end_time = #{record.sampleEndTime,jdbcType=DATE},
      upper_limit = #{record.upperLimit,jdbcType=INTEGER},
      data_source = #{record.dataSource,jdbcType=CHAR},
      status = #{record.status,jdbcType=CHAR},
      matching = #{record.matching,jdbcType=DECIMAL},
      CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zsy.repository.model.TaskInfo">
    update task_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=CHAR},
      </if>
      <if test="objs != null">
        objs = #{objs,jdbcType=VARCHAR},
      </if>
      <if test="objsFrequency != null">
        objs_frequency = #{objsFrequency,jdbcType=VARCHAR},
      </if>
      <if test="apps != null">
        apps = #{apps,jdbcType=VARCHAR},
      </if>
      <if test="appsFrequency != null">
        apps_frequency = #{appsFrequency,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="dataPath != null">
        data_path = #{dataPath,jdbcType=VARCHAR},
      </if>
      <if test="dataLength != null">
        data_length = #{dataLength,jdbcType=INTEGER},
      </if>
      <if test="sampleStartTime != null">
        sample_start_time = #{sampleStartTime,jdbcType=DATE},
      </if>
      <if test="sampleEndTime != null">
        sample_end_time = #{sampleEndTime,jdbcType=DATE},
      </if>
      <if test="upperLimit != null">
        upper_limit = #{upperLimit,jdbcType=INTEGER},
      </if>
      <if test="dataSource != null">
        data_source = #{dataSource,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="matching != null">
        matching = #{matching,jdbcType=DECIMAL},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zsy.repository.model.TaskInfo">
    update task_info
    set name = #{name,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=CHAR},
      objs = #{objs,jdbcType=VARCHAR},
      objs_frequency = #{objsFrequency,jdbcType=VARCHAR},
      apps = #{apps,jdbcType=VARCHAR},
      apps_frequency = #{appsFrequency,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      data_path = #{dataPath,jdbcType=VARCHAR},
      data_length = #{dataLength,jdbcType=INTEGER},
      sample_start_time = #{sampleStartTime,jdbcType=DATE},
      sample_end_time = #{sampleEndTime,jdbcType=DATE},
      upper_limit = #{upperLimit,jdbcType=INTEGER},
      data_source = #{dataSource,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      matching = #{matching,jdbcType=DECIMAL},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>